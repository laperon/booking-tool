{"ast":null,"code":"import React from 'react'; // import ReactDOM from 'react-dom';\n// import Button from '@material-ui/core/Button';\n// import useGoogleSheets from 'use-google-sheets';\n// import GoogleSpreadsheets from \"./Api/GoogleSpreadsheets\";\n\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\nlet userDataArray = [];\n\nfunction Spreeadsheet() {\n  // // Config variables\n  const SPREADSHEET_ID = '1SKwYSggegARNuhMHlFOhHqi-1xMV-0hfT4B3SGGu3vU'; //from the URL of your blank Google Sheet\n\n  const SHEET_ID = '1378992840';\n  const CLIENT_EMAIL = 'laperon@hybrid-bastion-323817.iam.gserviceaccount.com';\n  const PRIVATE_KEY = \"-----BEGIN PRIVATE KEY-----\\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC8EA1as2x8iYa/\\nJw3yEj88hMCr+3s3BuSi+gMl6fQ3UhoFmo6YgkUEjSDKRfPhLSQYYe3/tTOZCqgy\\nNqauquLfE4JtFQWLhR8B+oPNRng6WFH6vo1TQwdd2vT74lbhUUlAGW13g1O/Dxqx\\nJuleCXCemXT3MIKPwWi+i9o0JTOk0CDV4k4R+at8gNEI78wC4kaV3IkSt7NCLkpS\\nrWh5ZZhcQlDdRdjjakiv3bYmagjXwoOzknnAre2dH85H9ekoHklgaGXuIZu+2qOg\\n3qPBxhN6hOMF/zqXuR9YUAlAGyHqDylrVeADpVja6/m2+t8S+oOJwjR8i1oefQSL\\nVl1oNOOJAgMBAAECggEAEYOXsMqcp/j5VfA9y91f6wOMe3/NRO3FCXoJ5MQl4KiK\\nYJr5HHImWhMIGppa6O22qrglDW87Rc2QpjOBgKsMu5xyJTVD2c9dGMazM2D0la9v\\nvA+2suo/Q4H+ln4o2+1BaoEruQl/mT+fe1/NtDqiFL0jH9myUQ/AsN0upjRQO9EW\\ntjYUo/du6ET0akedWPwjxQ1SSTrB/8zDZLH42rPa6q9fwNjvzq2Je/CNPk2XSH6h\\nEcGZwy39L4emlZCsbI+HKHbIyJDMqG/0GI9Zo8BTeB6rxFruJjG2cQhWMpZdjogK\\nAuEsW87Eu5XNYzubabK1p/6+eQYQoYXNXmNwEct5sQKBgQDvPDNrE547dTJfQLYg\\nw1fFU2YDGJMfUds2k0bYPiTK11IoZVXXHKbUyAYnzoAsFeMHLYB6qD3veuahP4GR\\nomABCz9Ar+0unJa+KvA67rTrKv+QCBVAztWc/dGwkDb+2A4jcVJdm17iwgoI+TiK\\nLOniYwMz5xWJRksQFE/KfI392QKBgQDJPdWg0ddMXh2GVzCurZ5NY0fEj4j8y96R\\nzo79d6DEBGza3jhyv29f23ztpsp6twCwCn8CFoNjEN7ho93+edlTx0mcOTRpZBIY\\nz1+307aeCLP0dvYaQ9/UAhhpsCU6YToaI61mGz1fnbkX46aG8jEvJOpM4m0G/D0D\\nAZs2+YiVMQKBgCGlRNH9W1afX+s3jaXD81ckKIes8BwKhhsB0YfeDYydhcd6oPz0\\n4Z2xV/RHPY11so0y4AvgF33TuhXZeZ6CyJ+89jNhyqiwix7JqSmQos8kJ/cYu+x2\\namJ+6/u5/JIQzsQ7Tssta8XWZlTmwAXm1SnqpOuqx0OcKDhlsucWZ13ZAoGAdTtC\\nUbcsdt500KfGQlv91hM54bXEFZAmDkaIYfvoeYgiabX+qEoA9ZSFSGRbm/Uzv1m9\\n91dqHrHbRRMS5YXSJs33gbyJXcPgDvfvSMVaouFrA8SxRUe5AmZeFmN4rHOrR0L1\\nZoAD1smo49PIVOCN6mrU2wkkfmc+m5u58eKXwGECgYEA1j1UazhWM4zxR4HZiooo\\njyxGE23N97yAJEk2ZzKeVQQl+hVjkaCi63Y8/3HPsFbwfeBage6yyWjwEIjpIEll\\n4HKlsUaQDbT/aJ9iPtsFrvrYZfcc4yKOTfv5KWCIxVJAXf1OYSvafmU+kfOFGL4p\\n9bLp7cmwvTN+TTDAtiXrTr4=\\n-----END PRIVATE KEY-----\\n\";\n  const doc = new GoogleSpreadsheet(SPREADSHEET_ID);\n\n  const getCellByRange = async () => {\n    try {\n      await doc.useServiceAccountAuth({\n        client_email: CLIENT_EMAIL,\n        private_key: PRIVATE_KEY\n      }); // loads document properties and worksheets\n\n      await doc.loadInfo();\n      const sheet = doc.sheetsById[SHEET_ID];\n      await sheet.loadCells('A1:D5'); // await sheet.clear();\n      // const result = await sheet.addRow(row);\n      // const getRow = await sheet.getCell('A1');\n      // const loadCells = await sheet.loadCells('A1:B1');\n      // const a1 = sheet.getCell(0, 0); // access cells using a zero-based index\n      // const a1 = sheet.getCell(0, 0); // access cells using a zero-based index\n\n      console.log(getRow); // console.log(sheet); // total cells, loaded, how many non-empty\n    } catch (e) {\n      console.error('Error: ', e);\n    }\n  };\n\n  const appendSpreadsheet = async row => {\n    try {\n      await doc.useServiceAccountAuth({\n        client_email: CLIENT_EMAIL,\n        private_key: PRIVATE_KEY\n      }); // loads document properties and worksheets\n\n      await doc.loadInfo();\n      const sheet = doc.sheetsById[SHEET_ID]; // await sheet.clear();\n\n      const result = await sheet.addRow(row); // const getRow = sheet.getCellByA1('A1');\n      // const loadCells = await sheet.loadCells('A2:B7');\n      // const a1 = sheet.getCell(0, 0); // access cells using a zero-based index\n      // console.log(loadCells);\n    } catch (e) {\n      console.error('Error: ', e);\n    }\n  };\n\n  getCellByRange(); // const newRow = { Name: \"new name 222\", Value: \"new value\" };\n  // appendSpreadsheet(newRow);\n\n  return true;\n}\n\nexport default Spreeadsheet;","map":{"version":3,"sources":["/Users/igorzheglov/Sites/React/booking-tool/src/lib/Spreeadsheet.js"],"names":["React","GoogleSpreadsheet","userDataArray","Spreeadsheet","SPREADSHEET_ID","SHEET_ID","CLIENT_EMAIL","PRIVATE_KEY","doc","getCellByRange","useServiceAccountAuth","client_email","private_key","loadInfo","sheet","sheetsById","loadCells","console","log","getRow","e","error","appendSpreadsheet","row","result","addRow"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;AACA;;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AAEA,IAAIC,aAAa,GAAG,EAApB;;AAEA,SAASC,YAAT,GAAwB;AAEpB;AACA,QAAMC,cAAc,GAAG,8CAAvB,CAHoB,CAGmD;;AACvE,QAAMC,QAAQ,GAAG,YAAjB;AACA,QAAMC,YAAY,GAAG,uDAArB;AACA,QAAMC,WAAW,GAAG,ssDAApB;AAGA,QAAMC,GAAG,GAAG,IAAIP,iBAAJ,CAAsBG,cAAtB,CAAZ;;AAEA,QAAMK,cAAc,GAAG,YAAY;AAC/B,QAAI;AACA,YAAMD,GAAG,CAACE,qBAAJ,CAA0B;AAC5BC,QAAAA,YAAY,EAAEL,YADc;AAE5BM,QAAAA,WAAW,EAAEL;AAFe,OAA1B,CAAN,CADA,CAKA;;AACA,YAAMC,GAAG,CAACK,QAAJ,EAAN;AAEA,YAAMC,KAAK,GAAGN,GAAG,CAACO,UAAJ,CAAeV,QAAf,CAAd;AAEA,YAAMS,KAAK,CAACE,SAAN,CAAgB,OAAhB,CAAN,CAVA,CAWA;AACA;AACA;AACA;AAEA;AAGA;;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ,EAtBA,CAuBA;AAGH,KA1BD,CA0BE,OAAOC,CAAP,EAAU;AACRH,MAAAA,OAAO,CAACI,KAAR,CAAc,SAAd,EAAyBD,CAAzB;AACH;AACJ,GA9BD;;AAgCA,QAAME,iBAAiB,GAAG,MAAOC,GAAP,IAAe;AACrC,QAAI;AACA,YAAMf,GAAG,CAACE,qBAAJ,CAA0B;AAC5BC,QAAAA,YAAY,EAAEL,YADc;AAE5BM,QAAAA,WAAW,EAAEL;AAFe,OAA1B,CAAN,CADA,CAKA;;AACA,YAAMC,GAAG,CAACK,QAAJ,EAAN;AAEA,YAAMC,KAAK,GAAGN,GAAG,CAACO,UAAJ,CAAeV,QAAf,CAAd,CARA,CASA;;AACA,YAAMmB,MAAM,GAAG,MAAMV,KAAK,CAACW,MAAN,CAAaF,GAAb,CAArB,CAVA,CAWA;AACA;AAEA;AAGA;AAEH,KAnBD,CAmBE,OAAOH,CAAP,EAAU;AACRH,MAAAA,OAAO,CAACI,KAAR,CAAc,SAAd,EAAyBD,CAAzB;AACH;AACJ,GAvBD;;AA0BAX,EAAAA,cAAc,GArEM,CAuEpB;AACA;;AAEA,SAAO,IAAP;AACH;;AAED,eAAeN,YAAf","sourcesContent":["import React from 'react';\n// import ReactDOM from 'react-dom';\n// import Button from '@material-ui/core/Button';\n// import useGoogleSheets from 'use-google-sheets';\n// import GoogleSpreadsheets from \"./Api/GoogleSpreadsheets\";\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\n\nlet userDataArray = [];\n\nfunction Spreeadsheet() {\n\n    // // Config variables\n    const SPREADSHEET_ID = '1SKwYSggegARNuhMHlFOhHqi-1xMV-0hfT4B3SGGu3vU'; //from the URL of your blank Google Sheet\n    const SHEET_ID = '1378992840';\n    const CLIENT_EMAIL = 'laperon@hybrid-bastion-323817.iam.gserviceaccount.com';\n    const PRIVATE_KEY = \"-----BEGIN PRIVATE KEY-----\\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC8EA1as2x8iYa/\\nJw3yEj88hMCr+3s3BuSi+gMl6fQ3UhoFmo6YgkUEjSDKRfPhLSQYYe3/tTOZCqgy\\nNqauquLfE4JtFQWLhR8B+oPNRng6WFH6vo1TQwdd2vT74lbhUUlAGW13g1O/Dxqx\\nJuleCXCemXT3MIKPwWi+i9o0JTOk0CDV4k4R+at8gNEI78wC4kaV3IkSt7NCLkpS\\nrWh5ZZhcQlDdRdjjakiv3bYmagjXwoOzknnAre2dH85H9ekoHklgaGXuIZu+2qOg\\n3qPBxhN6hOMF/zqXuR9YUAlAGyHqDylrVeADpVja6/m2+t8S+oOJwjR8i1oefQSL\\nVl1oNOOJAgMBAAECggEAEYOXsMqcp/j5VfA9y91f6wOMe3/NRO3FCXoJ5MQl4KiK\\nYJr5HHImWhMIGppa6O22qrglDW87Rc2QpjOBgKsMu5xyJTVD2c9dGMazM2D0la9v\\nvA+2suo/Q4H+ln4o2+1BaoEruQl/mT+fe1/NtDqiFL0jH9myUQ/AsN0upjRQO9EW\\ntjYUo/du6ET0akedWPwjxQ1SSTrB/8zDZLH42rPa6q9fwNjvzq2Je/CNPk2XSH6h\\nEcGZwy39L4emlZCsbI+HKHbIyJDMqG/0GI9Zo8BTeB6rxFruJjG2cQhWMpZdjogK\\nAuEsW87Eu5XNYzubabK1p/6+eQYQoYXNXmNwEct5sQKBgQDvPDNrE547dTJfQLYg\\nw1fFU2YDGJMfUds2k0bYPiTK11IoZVXXHKbUyAYnzoAsFeMHLYB6qD3veuahP4GR\\nomABCz9Ar+0unJa+KvA67rTrKv+QCBVAztWc/dGwkDb+2A4jcVJdm17iwgoI+TiK\\nLOniYwMz5xWJRksQFE/KfI392QKBgQDJPdWg0ddMXh2GVzCurZ5NY0fEj4j8y96R\\nzo79d6DEBGza3jhyv29f23ztpsp6twCwCn8CFoNjEN7ho93+edlTx0mcOTRpZBIY\\nz1+307aeCLP0dvYaQ9/UAhhpsCU6YToaI61mGz1fnbkX46aG8jEvJOpM4m0G/D0D\\nAZs2+YiVMQKBgCGlRNH9W1afX+s3jaXD81ckKIes8BwKhhsB0YfeDYydhcd6oPz0\\n4Z2xV/RHPY11so0y4AvgF33TuhXZeZ6CyJ+89jNhyqiwix7JqSmQos8kJ/cYu+x2\\namJ+6/u5/JIQzsQ7Tssta8XWZlTmwAXm1SnqpOuqx0OcKDhlsucWZ13ZAoGAdTtC\\nUbcsdt500KfGQlv91hM54bXEFZAmDkaIYfvoeYgiabX+qEoA9ZSFSGRbm/Uzv1m9\\n91dqHrHbRRMS5YXSJs33gbyJXcPgDvfvSMVaouFrA8SxRUe5AmZeFmN4rHOrR0L1\\nZoAD1smo49PIVOCN6mrU2wkkfmc+m5u58eKXwGECgYEA1j1UazhWM4zxR4HZiooo\\njyxGE23N97yAJEk2ZzKeVQQl+hVjkaCi63Y8/3HPsFbwfeBage6yyWjwEIjpIEll\\n4HKlsUaQDbT/aJ9iPtsFrvrYZfcc4yKOTfv5KWCIxVJAXf1OYSvafmU+kfOFGL4p\\n9bLp7cmwvTN+TTDAtiXrTr4=\\n-----END PRIVATE KEY-----\\n\";\n\n\n    const doc = new GoogleSpreadsheet(SPREADSHEET_ID);\n\n    const getCellByRange = async () => {\n        try {\n            await doc.useServiceAccountAuth({\n                client_email: CLIENT_EMAIL,\n                private_key: PRIVATE_KEY,\n            });\n            // loads document properties and worksheets\n            await doc.loadInfo();\n\n            const sheet = doc.sheetsById[SHEET_ID];\n\n            await sheet.loadCells('A1:D5');\n            // await sheet.clear();\n            // const result = await sheet.addRow(row);\n            // const getRow = await sheet.getCell('A1');\n            // const loadCells = await sheet.loadCells('A1:B1');\n\n            // const a1 = sheet.getCell(0, 0); // access cells using a zero-based index\n\n\n            // const a1 = sheet.getCell(0, 0); // access cells using a zero-based index\n\n\n            console.log(getRow);\n            // console.log(sheet); // total cells, loaded, how many non-empty\n\n\n        } catch (e) {\n            console.error('Error: ', e);\n        }\n    } \n\n    const appendSpreadsheet = async (row) => {\n        try {\n            await doc.useServiceAccountAuth({\n                client_email: CLIENT_EMAIL,\n                private_key: PRIVATE_KEY,\n            });\n            // loads document properties and worksheets\n            await doc.loadInfo();\n\n            const sheet = doc.sheetsById[SHEET_ID];\n            // await sheet.clear();\n            const result = await sheet.addRow(row);\n            // const getRow = sheet.getCellByA1('A1');\n            // const loadCells = await sheet.loadCells('A2:B7');\n\n            // const a1 = sheet.getCell(0, 0); // access cells using a zero-based index\n\n\n            // console.log(loadCells);\n\n        } catch (e) {\n            console.error('Error: ', e);\n        }\n    };\n\n\n    getCellByRange();\n\n    // const newRow = { Name: \"new name 222\", Value: \"new value\" };\n    // appendSpreadsheet(newRow);\n\n    return true;\n}\n\nexport default Spreeadsheet;"]},"metadata":{},"sourceType":"module"}