{"ast":null,"code":"import React from 'react'; // import ReactDOM from 'react-dom';\n// import Button from '@material-ui/core/Button';\n// import useGoogleSheets from 'use-google-sheets';\n// import GoogleSpreadsheets from \"./Api/GoogleSpreadsheets\";\n\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\nlet userDataArray = [];\n\nfunction Spreeadsheet() {\n  alert('reeee');\n  const doc = new GoogleSpreadsheet(SPREADSHEET_ID);\n\n  const appendSpreadsheet = async row => {\n    try {\n      await doc.useServiceAccountAuth({\n        client_email: CLIENT_EMAIL,\n        private_key: PRIVATE_KEY\n      }); // loads document properties and worksheets\n\n      await doc.loadInfo();\n      const sheet = doc.sheetsById[SHEET_ID]; // await sheet.clear();\n\n      const result = await sheet.addRow(row);\n    } catch (e) {\n      console.error('Error: ', e);\n    }\n  };\n\n  const newRow = {\n    Name: \"new name 111\",\n    Value: \"new value\"\n  };\n  appendSpreadsheet(newRow); // return true;\n}\n\nexport default Spreeadsheet;","map":{"version":3,"sources":["/Users/igorzheglov/Sites/React/booking-tool/src/lib/Spreeadsheet.js"],"names":["React","GoogleSpreadsheet","userDataArray","Spreeadsheet","alert","doc","SPREADSHEET_ID","appendSpreadsheet","row","useServiceAccountAuth","client_email","CLIENT_EMAIL","private_key","PRIVATE_KEY","loadInfo","sheet","sheetsById","SHEET_ID","result","addRow","e","console","error","newRow","Name","Value"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;AACA;;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AAEA,IAAIC,aAAa,GAAG,EAApB;;AAEA,SAASC,YAAT,GAAwB;AAEpBC,EAAAA,KAAK,CAAC,OAAD,CAAL;AAEA,QAAMC,GAAG,GAAG,IAAIJ,iBAAJ,CAAsBK,cAAtB,CAAZ;;AAEA,QAAMC,iBAAiB,GAAG,MAAOC,GAAP,IAAe;AACrC,QAAI;AACA,YAAMH,GAAG,CAACI,qBAAJ,CAA0B;AAC5BC,QAAAA,YAAY,EAAEC,YADc;AAE5BC,QAAAA,WAAW,EAAEC;AAFe,OAA1B,CAAN,CADA,CAKA;;AACA,YAAMR,GAAG,CAACS,QAAJ,EAAN;AAEA,YAAMC,KAAK,GAAGV,GAAG,CAACW,UAAJ,CAAeC,QAAf,CAAd,CARA,CASA;;AACA,YAAMC,MAAM,GAAG,MAAMH,KAAK,CAACI,MAAN,CAAaX,GAAb,CAArB;AAEH,KAZD,CAYE,OAAOY,CAAP,EAAU;AACRC,MAAAA,OAAO,CAACC,KAAR,CAAc,SAAd,EAAyBF,CAAzB;AACH;AACJ,GAhBD;;AAmBA,QAAMG,MAAM,GAAG;AAAEC,IAAAA,IAAI,EAAE,cAAR;AAAwBC,IAAAA,KAAK,EAAE;AAA/B,GAAf;AAEAlB,EAAAA,iBAAiB,CAACgB,MAAD,CAAjB,CA3BoB,CA6BpB;AACH;;AAED,eAAepB,YAAf","sourcesContent":["import React from 'react';\n// import ReactDOM from 'react-dom';\n// import Button from '@material-ui/core/Button';\n// import useGoogleSheets from 'use-google-sheets';\n// import GoogleSpreadsheets from \"./Api/GoogleSpreadsheets\";\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\n\nlet userDataArray = [];\n\nfunction Spreeadsheet() {\n\n    alert('reeee');\n\n    const doc = new GoogleSpreadsheet(SPREADSHEET_ID);\n\n    const appendSpreadsheet = async (row) => {\n        try {\n            await doc.useServiceAccountAuth({\n                client_email: CLIENT_EMAIL,\n                private_key: PRIVATE_KEY,\n            });\n            // loads document properties and worksheets\n            await doc.loadInfo();\n\n            const sheet = doc.sheetsById[SHEET_ID];\n            // await sheet.clear();\n            const result = await sheet.addRow(row);\n\n        } catch (e) {\n            console.error('Error: ', e);\n        }\n    };\n\n\n    const newRow = { Name: \"new name 111\", Value: \"new value\" };\n\n    appendSpreadsheet(newRow);\n\n    // return true;\n}\n\nexport default Spreeadsheet;"]},"metadata":{},"sourceType":"module"}